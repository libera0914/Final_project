{"ast":null,"code":"/**\n * @description Determines whether the string begins with http: or https\n * @param {string} path\n * @returns {Boolean}\n */\nexport function isExternal(path) {\n  return /^(https?:|mailto:|tel:)/.test(path);\n}\n\n/**\n* @description Checking if it's a link\n* @param {string} url\n* @returns {Boolean}\n*/\nexport function validURL(url) {\n  const reg = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/;\n  return reg.test(url);\n}\n\n/**\n* @description Determine if the format is email\n* @param {string} email\n* @returns {Boolean}\n*/\nexport function validEmail(email) {\n  const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return reg.test(email);\n}\n\n/**\n* @description Determines whether the string is all lowercase\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validLowerCase(str) {\n  const reg = /^[a-z]+$/;\n  return reg.test(str);\n}\n\n/**\n* @description Determines whether the string is all uppercase\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validUpperCase(str) {\n  const reg = /^[A-Z]+$/;\n  return reg.test(str);\n}\n\n/**\n* @description Determines whether the string is all letters\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validAlphabets(str) {\n  const reg = /^[A-Za-z]+$/;\n  return reg.test(str);\n}\n\n/**\n* @description Determines if it is a character\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function isString(str) {\n  if (typeof str === 'string' || str instanceof String) {\n    return true;\n  }\n  return false;\n}\n\n/**\n* @description Determines if it is an array\n* @param {any} arg\n* @returns {Boolean}\n*/\nexport function isArray(arg) {\n  if (typeof Array.isArray === 'undefined') {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n  }\n  return Array.isArray(arg);\n}\n\n/**\n* @description Determines if it is an object\n* @param {any} arg\n* @returns {Boolean}\n*/\nexport function isObject(arg) {\n  return Object.prototype.toString.call(arg) === '[object Object]';\n}","map":{"version":3,"names":["isExternal","path","test","validURL","url","reg","validEmail","email","validLowerCase","str","validUpperCase","validAlphabets","isString","String","isArray","arg","Array","Object","prototype","toString","call","isObject"],"sources":["D:/Coventry Uni flims/Year3 stage2/毕业设计/Final project/code-1.0.4/web-app/src/utils/validate.js"],"sourcesContent":["/**\n * @description Determines whether the string begins with http: or https\n * @param {string} path\n * @returns {Boolean}\n */\nexport function isExternal(path) {\n  return /^(https?:|mailto:|tel:)/.test(path)\n}\n\n/**\n* @description Checking if it's a link\n* @param {string} url\n* @returns {Boolean}\n*/\nexport function validURL(url) {\n  const reg = /^(https?|ftp):\\/\\/([a-zA-Z0-9.-]+(:[a-zA-Z0-9.&%$-]+)*@)*((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]?)(\\.(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9]?[0-9])){3}|([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+\\.(com|edu|gov|int|mil|net|org|biz|arpa|info|name|pro|aero|coop|museum|[a-zA-Z]{2}))(:[0-9]+)*(\\/($|[a-zA-Z0-9.,?'\\\\+&%$#=~_-]+))*$/\n  return reg.test(url)\n}\n\n/**\n* @description Determine if the format is email\n* @param {string} email\n* @returns {Boolean}\n*/\nexport function validEmail(email) {\n  const reg = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return reg.test(email)\n}\n\n/**\n* @description Determines whether the string is all lowercase\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validLowerCase(str) {\n  const reg = /^[a-z]+$/\n  return reg.test(str)\n}\n\n/**\n* @description Determines whether the string is all uppercase\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validUpperCase(str) {\n  const reg = /^[A-Z]+$/\n  return reg.test(str)\n}\n\n/**\n* @description Determines whether the string is all letters\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function validAlphabets(str) {\n  const reg = /^[A-Za-z]+$/\n  return reg.test(str)\n}\n\n/**\n* @description Determines if it is a character\n* @param {string} str\n* @returns {Boolean}\n*/\nexport function isString(str) {\n  if (typeof str === 'string' || str instanceof String) {\n    return true\n  }\n  return false\n}\n\n/**\n* @description Determines if it is an array\n* @param {any} arg\n* @returns {Boolean}\n*/\nexport function isArray(arg) {\n  if (typeof Array.isArray === 'undefined') {\n    return Object.prototype.toString.call(arg) === '[object Array]'\n  }\n  return Array.isArray(arg)\n}\n\n/**\n* @description Determines if it is an object\n* @param {any} arg\n* @returns {Boolean}\n*/\nexport function isObject(arg) {\n  return Object.prototype.toString.call(arg) === '[object Object]'\n}\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,UAAU,CAACC,IAAI,EAAE;EAC/B,OAAO,yBAAyB,CAACC,IAAI,CAACD,IAAI,CAAC;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,QAAQ,CAACC,GAAG,EAAE;EAC5B,MAAMC,GAAG,GAAG,4TAA4T;EACxU,OAAOA,GAAG,CAACH,IAAI,CAACE,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,UAAU,CAACC,KAAK,EAAE;EAChC,MAAMF,GAAG,GAAG,yJAAyJ;EACrK,OAAOA,GAAG,CAACH,IAAI,CAACK,KAAK,CAAC;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACC,GAAG,EAAE;EAClC,MAAMJ,GAAG,GAAG,UAAU;EACtB,OAAOA,GAAG,CAACH,IAAI,CAACO,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,cAAc,CAACD,GAAG,EAAE;EAClC,MAAMJ,GAAG,GAAG,UAAU;EACtB,OAAOA,GAAG,CAACH,IAAI,CAACO,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,cAAc,CAACF,GAAG,EAAE;EAClC,MAAMJ,GAAG,GAAG,aAAa;EACzB,OAAOA,GAAG,CAACH,IAAI,CAACO,GAAG,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,QAAQ,CAACH,GAAG,EAAE;EAC5B,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,YAAYI,MAAM,EAAE;IACpD,OAAO,IAAI;EACb;EACA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,OAAO,CAACC,GAAG,EAAE;EAC3B,IAAI,OAAOC,KAAK,CAACF,OAAO,KAAK,WAAW,EAAE;IACxC,OAAOG,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,KAAK,gBAAgB;EACjE;EACA,OAAOC,KAAK,CAACF,OAAO,CAACC,GAAG,CAAC;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASM,QAAQ,CAACN,GAAG,EAAE;EAC5B,OAAOE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,KAAK,iBAAiB;AAClE"},"metadata":{},"sourceType":"module","externalDependencies":[]}