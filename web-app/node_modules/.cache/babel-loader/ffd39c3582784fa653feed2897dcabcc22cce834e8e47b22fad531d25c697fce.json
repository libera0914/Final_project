{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      option1: \"\",\n      option2: \"\",\n      option3: \"\",\n      loading: false,\n      tableData: [],\n      openKeys: ['sub1'],\n      openKeys2: ['sub2'],\n      rootSubmenuKeys: ['sub1'],\n      rootSubmenuKeys2: ['sub2'],\n      columns: [{\n        title: 'COURSECODE',\n        dataIndex: 'courseCode'\n      }, {\n        title: 'COURSETITLE',\n        dataIndex: 'courseTitle',\n        sorter: (a, b) => a.courseTitle.localeCompare(b.courseTitle),\n        sortDirections: ['descend', 'ascend']\n      }, {\n        title: 'TUITIONFEE',\n        dataIndex: 'tuitionFee'\n      }, {\n        title: 'FIRSTYENROLLED',\n        dataIndex: 'firstyEnrolled'\n      }, {\n        title: 'DEGREE',\n        dataIndex: 'degree'\n      }, {\n        title: 'TYPES',\n        dataIndex: 'types'\n      }, {\n        title: 'FROM',\n        dataIndex: 'from'\n      }],\n      pagination: {\n        total: 0,\n        current: 1,\n        pageSize: 5,\n        //每页中显示5条数据\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: total => `Total ${total} items` //分页中显示总的数据\n      },\n\n      queryParams: {\n        keyWord: '',\n        pageSize: 10,\n        pageNum: 1,\n        degree: '',\n        from: '',\n        types: '',\n        courseTitle: '',\n        courseName: [],\n        courseTitles: []\n      },\n      autoExpandParent: true,\n      defaultExpandAll: true,\n      checkedKeys: [],\n      selectedKeys: [],\n      checked: [],\n      collegeItems: [],\n      subjectItems: [],\n      menuValue: [],\n      menuValue2: []\n    };\n  },\n  watch: {\n    menuValue: {\n      handler(val) {\n        if (val) {\n          this.loadData();\n        }\n      },\n      deep: true\n    },\n    menuValue2: {\n      handler(val) {\n        if (val) {\n          this.loadData();\n        }\n      },\n      deep: true\n    }\n  },\n  mounted() {\n    this.option1 = this.$store.getters.option1;\n    this.option2 = this.$store.getters.option2;\n    this.option3 = this.$store.getters.option3;\n    this.queryParams.degree = this.option1;\n    this.queryParams.from = this.option2;\n    this.queryParams.types = this.option3;\n    this.loadData();\n    this.loadMenuData();\n  },\n  methods: {\n    toInformation(type) {\n      this.$router.push({\n        path: '/info',\n        query: {\n          type: type\n        }\n      });\n    },\n    onOpenChange(openKeys) {\n      const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\n        this.openKeys = openKeys;\n      } else {\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\n      }\n    },\n    onOpenChange2(openKeys) {\n      const latestOpenKey = openKeys.find(key => this.openKeys2.indexOf(key) === -1);\n      if (this.rootSubmenuKeys2.indexOf(latestOpenKey) === -1) {\n        this.openKeys2 = openKeys;\n      } else {\n        this.openKeys2 = latestOpenKey ? [latestOpenKey] : [];\n      }\n    },\n    loadMenuData() {\n      let params = {\n        degree: this.option1,\n        from: this.option2,\n        types: this.option3\n      };\n      console.log(params);\n      this.$api.getCourse(params).then(res => {\n        this.collegeItems = res.data.flat();\n      });\n      this.$api.getMajor(params).then(res => {\n        this.subjectItems = res.data.flat();\n      });\n    },\n    onChange(pagination) {\n      this.pagination.current = pagination.current;\n      this.pagination.pageSize = pagination.pageSize;\n      this.queryParams.pageNum = pagination.current;\n      this.queryParams.pageSize = pagination.pageSize;\n      this.loadData();\n    },\n    onSearch() {\n      this.loadData();\n    },\n    returnBtn() {\n      this.$router.push({\n        path: '/preparation'\n      });\n    },\n    loadData() {\n      this.queryParams.courseName = this.menuValue;\n      this.queryParams.courseTitles = this.menuValue2;\n      this.loading = true;\n      this.$api.getTutionByPage(this.queryParams).then(res => {\n        if (res.data.data.length == 0) {\n          this.$message.warning(`There are no matching items currently searched`);\n        }\n        this.loading = false;\n        if (res.status) {\n          this.tableData = res.data.data;\n          this.pagination.total = res.data.total;\n        }\n      });\n    },\n    itemClick(obj) {\n      this.loadData();\n    },\n    select(obj) {\n      console.log(obj);\n    }\n  }\n};","map":{"version":3,"mappings":";AA2DA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC,UACA;QACAC;QACAC;MACA,GACA;QACAD;QACAC;QACAC;QACAC;MACA,GACA;QACAH;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,GACA;QACAD;QACAC;MACA,EACA;MACAG;QACAC;QACAC;QACAC;QAAA;QACAC;QACAC;QACAC;MACA;;MACAC;QACAC;QACAL;QACAM;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAF;MACAG;QACA;UACA;QACA;MACA;MACAC;IACA;IACAH;MACAE;QACA;UACA;QACA;MACA;MACAC;IACA;EACA;EACAC;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA;EACAC;IACAC;MACA;QACAC;QACAC;UACAC;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;QACA1B;QACAC;QACAC;MACA;MACAyB;MACA;QACA;MACA;MACA;QACA;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACAT;MACA;IACA;IACAU;MACA;MACA;MACA;MACA;QACA;UACA;QACA;QACA;QACA;UACA;UACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACAN;IACA;EAEA;AACA","names":["data","option1","option2","option3","loading","tableData","openKeys","openKeys2","rootSubmenuKeys","rootSubmenuKeys2","columns","title","dataIndex","sorter","sortDirections","pagination","total","current","pageSize","showSizeChanger","showQuickJumper","showTotal","queryParams","keyWord","pageNum","degree","from","types","courseTitle","courseName","courseTitles","autoExpandParent","defaultExpandAll","checkedKeys","selectedKeys","checked","collegeItems","subjectItems","menuValue","menuValue2","watch","handler","deep","mounted","methods","toInformation","path","query","type","onOpenChange","onOpenChange2","loadMenuData","console","onChange","onSearch","returnBtn","loadData","itemClick","select"],"sourceRoot":"src/views","sources":["tuitionInquiry.vue"],"sourcesContent":["<template>\r\n  <div class=\"preparation-page\">\r\n    <a-layout>\r\n      <a-layout-header class=\"header\">\r\n        <div class=\"head-box\">\r\n          <div class=\"title\">Tuition inquiry interface</div>\r\n        </div>\r\n      </a-layout-header>\r\n      <a-layout>\r\n        <a-layout-sider class=\"sider\" width=\"350\">\r\n          <div>\r\n            <div class=\"menu-title\">Course name</div>\r\n            <a-menu mode=\"inline\" v-model=\"menuValue\" :open-keys=\"openKeys\" multiple style=\"width: 350px\" @openChange=\"onOpenChange\" @select=\"select\">\r\n              <a-sub-menu key=\"sub1\">\r\n                <span slot=\"title\"><a-icon type=\"appstore\" /><span>College name</span></span>\r\n                <a-menu-item v-for=\"item in collegeItems\" :key=\"item\" @click=\"itemClick\" >\r\n                  {{ item }} <a-checkbox style=\"float:right\"></a-checkbox>\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n            </a-menu>\r\n            <a-menu mode=\"inline\" v-model=\"menuValue2\" :open-keys=\"openKeys2\" multiple style=\"width: 350px\" @openChange=\"onOpenChange2\" @select=\"select\">\r\n              <a-sub-menu key=\"sub2\">\r\n                <span slot=\"title\"><a-icon type=\"appstore\" /><span>Subject name</span></span>\r\n                <a-menu-item v-for=\"item in subjectItems\" :key=\"item\" @click=\"itemClick\" >\r\n                  {{ item }} <a-checkbox style=\"float:right\"></a-checkbox>\r\n                </a-menu-item>\r\n              </a-sub-menu>\r\n            </a-menu>\r\n          </div>\r\n        </a-layout-sider>\r\n        <a-layout-content>\r\n          <div class=\"content-head\">\r\n             <a-breadcrumb class=\"content-breadcrumb\">\r\n                <a-breadcrumb-item>{{ option1 }}</a-breadcrumb-item>\r\n                <a-breadcrumb-item>{{ option2 }}</a-breadcrumb-item>\r\n                <a-breadcrumb-item>{{ option3 }}</a-breadcrumb-item>\r\n                <a-input-search v-model=\"queryParams.keyWord\" placeholder=\"input search text\" style=\"width: 200px;margin-left: 100px\" @search=\"onSearch\" />\r\n                <a-button class=\"return-btn\" @click=\"returnBtn\">Return</a-button>\r\n              </a-breadcrumb>\r\n          </div>\r\n          <div class=\"content-table\">\r\n            <a-table :columns=\"columns\" \r\n              :data-source=\"tableData\"  \r\n              :pagination=\"pagination\"\r\n              :loading=\"loading\"\r\n              @change=\"onChange\"\r\n               bordered>\r\n            </a-table>\r\n          </div>\r\n        </a-layout-content>\r\n      </a-layout>\r\n      <a-layout-footer>\r\n        <div class=\"footer\">If you have a problem you can't solve, please contact us at xxxx@uni.coventry.ac.uk</div>\r\n      </a-layout-footer>\r\n    </a-layout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      option1: \"\",\r\n      option2: \"\",\r\n      option3: \"\",\r\n      loading: false,\r\n      tableData: [],\r\n      openKeys: ['sub1'],\r\n      openKeys2: ['sub2'],\r\n      rootSubmenuKeys: ['sub1'],\r\n      rootSubmenuKeys2: ['sub2'],\r\n      columns: [\r\n        {\r\n          title: 'COURSECODE',\r\n          dataIndex: 'courseCode'\r\n        },\r\n        {\r\n          title: 'COURSETITLE',\r\n          dataIndex: 'courseTitle',\r\n          sorter: (a, b) => a.courseTitle.localeCompare(b.courseTitle),\r\n          sortDirections: ['descend', 'ascend'],\r\n        },\r\n        {\r\n          title: 'TUITIONFEE',\r\n          dataIndex: 'tuitionFee'\r\n        },\r\n        {\r\n          title: 'FIRSTYENROLLED',\r\n          dataIndex: 'firstyEnrolled'\r\n        },\r\n        {\r\n          title: 'DEGREE',\r\n          dataIndex: 'degree'\r\n        },\r\n        {\r\n          title: 'TYPES',\r\n          dataIndex: 'types'\r\n        },\r\n        {\r\n          title: 'FROM',\r\n          dataIndex: 'from'\r\n        }\r\n      ],\r\n      pagination: {\r\n        total: 0,\r\n        current:1,\r\n        pageSize: 5,//每页中显示5条数据\r\n        showSizeChanger: true,\r\n        showQuickJumper: true,\r\n        showTotal: total => `Total ${total} items`,  //分页中显示总的数据\r\n      },\r\n      queryParams: {\r\n        keyWord: '',\r\n        pageSize: 10,\r\n        pageNum: 1,\r\n        degree: '',\r\n        from: '',\r\n        types: '',\r\n        courseTitle: '',\r\n        courseName: [],\r\n        courseTitles: []\r\n      },\r\n      autoExpandParent: true,\r\n      defaultExpandAll: true,\r\n      checkedKeys: [],\r\n      selectedKeys: [],\r\n      checked: [],\r\n      collegeItems:[],\r\n      subjectItems:[],\r\n      menuValue:[],\r\n      menuValue2:[]\r\n    }\r\n  },\r\n  watch:{\r\n    menuValue:{\r\n      handler(val) {\r\n        if(val) {\r\n          this.loadData()\r\n        }\r\n      },\r\n      deep:true\r\n    },\r\n    menuValue2:{\r\n      handler(val) {\r\n        if(val) {\r\n          this.loadData()\r\n        }\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  mounted(){\r\n   \r\n    this.option1 = this.$store.getters.option1\r\n    this.option2 = this.$store.getters.option2\r\n    this.option3 = this.$store.getters.option3\r\n    this.queryParams.degree = this.option1\r\n    this.queryParams.from = this.option2\r\n    this.queryParams.types = this.option3\r\n    this.loadData()\r\n    this.loadMenuData()\r\n  },\r\n  methods: {\r\n    toInformation(type) {\r\n      this.$router.push({\r\n        path:'/info',\r\n        query:{\r\n          type:type\r\n        }\r\n      })\r\n    },\r\n    onOpenChange(openKeys) {\r\n      const latestOpenKey = openKeys.find(key => this.openKeys.indexOf(key) === -1);\r\n      if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n        this.openKeys = openKeys;\r\n      } else {\r\n        this.openKeys = latestOpenKey ? [latestOpenKey] : [];\r\n      }\r\n    },\r\n    onOpenChange2(openKeys) {\r\n      const latestOpenKey = openKeys.find(key => this.openKeys2.indexOf(key) === -1);\r\n      if (this.rootSubmenuKeys2.indexOf(latestOpenKey) === -1) {\r\n        this.openKeys2 = openKeys;\r\n      } else {\r\n        this.openKeys2 = latestOpenKey ? [latestOpenKey] : [];\r\n      }\r\n    },\r\n    loadMenuData() {\r\n      let params = {\r\n        degree:this.option1,\r\n        from: this.option2,\r\n        types: this.option3\r\n      }\r\n      console.log(params)\r\n      this.$api.getCourse(params).then(res => {\r\n        this.collegeItems = res.data.flat()\r\n      });\r\n      this.$api.getMajor(params).then(res => {\r\n        this.subjectItems = res.data.flat()\r\n      })\r\n    },\r\n    onChange(pagination) {\r\n      this.pagination.current = pagination.current;\r\n      this.pagination.pageSize = pagination.pageSize;\r\n      this.queryParams.pageNum = pagination.current;\r\n      this.queryParams.pageSize = pagination.pageSize;\r\n      this.loadData();\r\n    },\r\n    onSearch() {\r\n      this.loadData();\r\n    },\r\n    returnBtn() {\r\n      this.$router.push({\r\n        path:'/preparation',\r\n      })\r\n    },\r\n    loadData() {\r\n      this.queryParams.courseName = this.menuValue\r\n      this.queryParams.courseTitles = this.menuValue2\r\n      this.loading = true;\r\n      this.$api.getTutionByPage(this.queryParams).then(res => {\r\n        if(res.data.data.length == 0) {\r\n          this.$message.warning(`There are no matching items currently searched`);\r\n        }\r\n        this.loading = false;\r\n        if(res.status) {\r\n          this.tableData = res.data.data\r\n          this.pagination.total = res.data.total\r\n        }\r\n      })\r\n    },\r\n    itemClick(obj) {\r\n      this.loadData();\r\n    },\r\n    select(obj) {\r\n      console.log(obj)\r\n    }\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.preparation-page {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  background: #dbd8d8;\r\n  .img-box {\r\n    position: absolute;\r\n    top:10px;\r\n    left: 0px;\r\n  }\r\n  .header {\r\n    background: #FF8D1A;\r\n    height: 150px;\r\n    display: flex;\r\n    justify-content: center;\r\n    .head-box {\r\n      width: 800px;\r\n      margin-top: 50px;\r\n      .title {\r\n        font-size: 24px;\r\n        font-weight: 900;\r\n        color: #000;\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n      .sub-title {\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n    }\r\n  }\r\n  .sider {\r\n    min-height: 500px;\r\n    background: #fff;\r\n    .menu-title {\r\n      color: #000;\r\n      font-weight: 900;\r\n    }\r\n  }\r\n  .content-head {\r\n    width: 100%;\r\n    height: 50px;\r\n    background: #fff;\r\n    .content-breadcrumb{\r\n      padding-top: 10px;\r\n    }\r\n    .return-btn {\r\n      float: right;\r\n      margin-right: 40px;\r\n    }\r\n  }\r\n  .content-table {\r\n    margin:10px;\r\n    height: 650px;\r\n  }\r\n  .footer {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}