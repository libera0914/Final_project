{"ast":null,"code":"import axios from \"axios\";\nimport router from \"../router\";\nimport { CONTENT_TYPE_MAP, DEDAULT_REQUEST_OPTION, DEDAULT_REQUEST_OPERATION } from \"../config/request.config\";\nimport { validURL } from \"../utils/validate\";\nimport { toast } from \"../utils/util\";\nconst {\n  VUE_APP_BASE_API\n} = process.env;\nconst service = axios.create({\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\n  baseURL: VUE_APP_BASE_API,\n  // 超时\n  timeout: 10000\n});\nlet optertion = JSON.parse(JSON.stringify(DEDAULT_REQUEST_OPERATION));\n\n// request拦截器\nservice.interceptors.request.use(config => {\n  const {\n    isHasToken,\n    contentType\n  } = optertion;\n\n  // 让每个请求携带自定义token\n  if (isHasToken) {\n    config.headers[\"Authorization\"] = localStorage.getItem(\"token\") || \"\";\n  }\n  config.headers[\"Content-Type\"] = contentType;\n\n  // 请求映射params参数\n  if (config.params) {\n    let url = config.url + \"?\" + tansParams(config.params);\n    url = url.slice(0, -1);\n    config.params = {};\n    config.url = url;\n  }\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n\n// 响应拦截器\nservice.interceptors.response.use(res => {\n  const {\n      status,\n      msg\n    } = res,\n    {\n      fileName,\n      isOpenPath,\n      isAutoToastFail\n    } = optertion;\n  // 未设置状态码则默认成功状态\n  const code = status || 200;\n  if (code === 200) {\n    if (isOpenPath && validURL(res.data)) {\n      window.open(res.data);\n    }\n    return Promise.resolve(res.data);\n  } else {\n    isAutoToastFail && toast.fail(msg);\n    return Promise.reject(res.data);\n  }\n}, error => {\n  let {\n      message\n    } = error,\n    msg = \"\";\n  if (message == \"Network Error\") {\n    msg = \"服务器连接异常\";\n  } else if (message.includes(\"timeout\")) {\n    msg = \"请求超时\";\n  } else if (message.includes(\"400\")) {\n    msg = \"请求有误\";\n  } else if (message.includes(\"500\")) {\n    msg = \"服务器错误\";\n  }\n  toast.fail(msg);\n  return Promise.reject({\n    message: msg\n  });\n});\n\n/**\n * @description 默认请求参数\n * @param {string} url 请求地址 - 默认(\"\")\n * @param {string} contentType 请求头类型 JSON: json格式 FORM: form格式 FORMDATA:formData格式 - 默认(JSON)\n * @param {string} method 请求方式 - 默认(post) post put get delete\n * @param {object} data body请求数据 - 默认({})\n * @param {object} params url请求数据 - 默认({})\n * @param {function} isBackProgress 是否开启返回进度条 - 默认(false)\n * @param {function} onProgress 进度条回调函数 (val)=>{ console.log(val) } val: 进度百分比\n * @param {number} progressPrecision 进度条小数点精度\n * @param {boolean} isHasToken 是否请求带token - 默认(true)\n * @param {boolean} isAutoToastFail 是否自动提示报错 - 默认(false)\n * @param {boolean} isOpenPath 是否直接打开链接 - 默认(false)\n * @param {string} fileName 文件名称 - 默认(文件.txt)\n */\nexport function request(option) {\n  const {\n    url,\n    contentType,\n    method,\n    data = {},\n    params = {},\n    isBackProgress,\n    onProgress,\n    progressPrecision,\n    isOpenPath,\n    isHasToken,\n    isAutoToastFail\n  } = {\n    ...DEDAULT_REQUEST_OPTION,\n    ...option\n  };\n  optertion = {\n    isOpenPath,\n    isHasToken,\n    isAutoToastFail,\n    contentType: CONTENT_TYPE_MAP[contentType.toString().toUpperCase()] || \"application/json; charset=utf-8\"\n  };\n  let config = {\n    method,\n    url,\n    data,\n    params,\n    onDownloadProgress: progressEvent => {\n      if (progressEvent.lengthComputable) {\n        onProgress((progressEvent.loaded / progressEvent.total * 100).toFixed(progressPrecision < 0 || progressPrecision > 100 ? 2 : progressPrecision));\n      }\n    }\n  };\n  if (isBackProgress) delete config.onDownloadProgress;\n  return service(config);\n}\n\n/**\n * @description 参数处理\n * @param {object} params  参数\n */\nfunction tansParams(params) {\n  let result = \"\";\n  for (const propName of Object.keys(params)) {\n    const value = params[propName];\n    var part = encodeURIComponent(propName) + \"=\";\n    if (value !== null && typeof value !== \"undefined\") {\n      if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n          if (value[key] !== null && typeof value[key] !== \"undefined\") {\n            let params = propName + \"[\" + key + \"]\";\n            var subPart = encodeURIComponent(params) + \"=\";\n            result += subPart + encodeURIComponent(value[key]) + \"&\";\n          }\n        }\n      } else {\n        result += part + encodeURIComponent(value) + \"&\";\n      }\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["axios","router","CONTENT_TYPE_MAP","DEDAULT_REQUEST_OPTION","DEDAULT_REQUEST_OPERATION","validURL","toast","VUE_APP_BASE_API","process","env","service","create","baseURL","timeout","optertion","JSON","parse","stringify","interceptors","request","use","config","isHasToken","contentType","headers","localStorage","getItem","params","url","tansParams","slice","error","Promise","reject","response","res","status","msg","fileName","isOpenPath","isAutoToastFail","code","data","window","open","resolve","fail","message","includes","option","method","isBackProgress","onProgress","progressPrecision","toString","toUpperCase","onDownloadProgress","progressEvent","lengthComputable","loaded","total","toFixed","result","propName","Object","keys","value","part","encodeURIComponent","key","subPart"],"sources":["E:/项目/考文垂/code/web-app/src/utils/request.js"],"sourcesContent":["import axios from \"axios\";\nimport router from \"../router\";\nimport {\n  CONTENT_TYPE_MAP,\n  DEDAULT_REQUEST_OPTION,\n  DEDAULT_REQUEST_OPERATION\n} from \"../config/request.config\";\nimport { validURL } from \"../utils/validate\";\nimport { toast } from \"../utils/util\";\nconst { VUE_APP_BASE_API } = process.env;\n\nconst service = axios.create({\n  // axios中请求配置有baseURL选项，表示请求URL公共部分\n  baseURL: VUE_APP_BASE_API,\n  // 超时\n  timeout: 10000,\n});\n\nlet optertion = JSON.parse(JSON.stringify(DEDAULT_REQUEST_OPERATION));\n\n// request拦截器\nservice.interceptors.request.use(\n  (config) => {\n    const { isHasToken, contentType } = optertion;\n\n    // 让每个请求携带自定义token\n    if (isHasToken) {\n      config.headers[\"Authorization\"] =\n        localStorage.getItem(\"token\") || \"\";\n    }\n\n    config.headers[\"Content-Type\"] = contentType;\n\n    // 请求映射params参数\n    if (config.params) {\n      let url = config.url + \"?\" + tansParams(config.params);\n      url = url.slice(0, -1);\n      config.params = {};\n      config.url = url;\n    }\n    return config;\n  },\n  (error) => {\n    Promise.reject(error);\n  }\n);\n\n// 响应拦截器\nservice.interceptors.response.use(\n  (res) => {\n    const { status, msg } = res,\n      { fileName, isOpenPath, isAutoToastFail } = optertion;\n    // 未设置状态码则默认成功状态\n    const code = status || 200;\n\n   \n\n    if (code === 200) {\n      if (isOpenPath && validURL(res.data)) {\n        window.open(res.data);\n      }\n      return Promise.resolve(res.data);\n    } else {\n      isAutoToastFail && toast.fail(msg);\n      return Promise.reject(res.data);\n    }\n  },\n  (error) => {\n    let { message } = error,\n      msg = \"\";\n    if (message == \"Network Error\") {\n      msg = \"服务器连接异常\";\n    } else if (message.includes(\"timeout\")) {\n      msg = \"请求超时\";\n    } else if (message.includes(\"400\")) {\n      msg = \"请求有误\";\n    } else if (message.includes(\"500\")) {\n      msg = \"服务器错误\";\n    }\n    toast.fail(msg);\n    return Promise.reject({ message: msg });\n  }\n);\n\n/**\n * @description 默认请求参数\n * @param {string} url 请求地址 - 默认(\"\")\n * @param {string} contentType 请求头类型 JSON: json格式 FORM: form格式 FORMDATA:formData格式 - 默认(JSON)\n * @param {string} method 请求方式 - 默认(post) post put get delete\n * @param {object} data body请求数据 - 默认({})\n * @param {object} params url请求数据 - 默认({})\n * @param {function} isBackProgress 是否开启返回进度条 - 默认(false)\n * @param {function} onProgress 进度条回调函数 (val)=>{ console.log(val) } val: 进度百分比\n * @param {number} progressPrecision 进度条小数点精度\n * @param {boolean} isHasToken 是否请求带token - 默认(true)\n * @param {boolean} isAutoToastFail 是否自动提示报错 - 默认(false)\n * @param {boolean} isOpenPath 是否直接打开链接 - 默认(false)\n * @param {string} fileName 文件名称 - 默认(文件.txt)\n */\nexport function request(option) {\n  const {\n    url,\n    contentType,\n    method,\n    data = {},\n    params = {},\n    isBackProgress,\n    onProgress,\n    progressPrecision,\n    isOpenPath,\n    isHasToken,\n    isAutoToastFail,\n  } = {\n    ...DEDAULT_REQUEST_OPTION,\n    ...option,\n  };\n\n  optertion = {\n    isOpenPath,\n    isHasToken,\n    isAutoToastFail,\n    contentType:\n      CONTENT_TYPE_MAP[contentType.toString().toUpperCase()] ||\n      \"application/json; charset=utf-8\",\n  };\n\n  let config = {\n    method,\n    url,\n    data,\n    params,\n    onDownloadProgress: (progressEvent) => {\n      if (progressEvent.lengthComputable) {\n        onProgress(\n          ((progressEvent.loaded / progressEvent.total) * 100).toFixed(\n            progressPrecision < 0 || progressPrecision > 100\n              ? 2\n              : progressPrecision\n          )\n        );\n      }\n    },\n  };\n\n  if (isBackProgress) delete config.onDownloadProgress;\n\n  return service(config);\n}\n\n/**\n * @description 参数处理\n * @param {object} params  参数\n */\nfunction tansParams(params) {\n  let result = \"\";\n  for (const propName of Object.keys(params)) {\n    const value = params[propName];\n    var part = encodeURIComponent(propName) + \"=\";\n    if (value !== null && typeof value !== \"undefined\") {\n      if (typeof value === \"object\") {\n        for (const key of Object.keys(value)) {\n          if (value[key] !== null && typeof value[key] !== \"undefined\") {\n            let params = propName + \"[\" + key + \"]\";\n            var subPart = encodeURIComponent(params) + \"=\";\n            result += subPart + encodeURIComponent(value[key]) + \"&\";\n          }\n        }\n      } else {\n        result += part + encodeURIComponent(value) + \"&\";\n      }\n    }\n  }\n  return result;\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}